version: '3.7'

services:
  redis:
     image: redis:alpine
  web:
    build: ./
    container_name: "cleaning_web"
    restart: always
    command: bash entrypoint.sh
    volumes:
      - .:/usr/src/app
      - ./static:/usr/src/app/static
      - ./media:/usr/src/app/media
    ports:
      - 8000:8000
    env_file:
      - ./.end.dev
    depends_on:
      - db
  db:
    image: postgres:12
    container_name: "cleaning_db"
    volumes:
      - capture_postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.end.dev
    ports:
      - 5433:5433
  nginx:
    build: ./nginx
    container_name: cleaning_nginx
    restart: on-failure
    ports:
      - 80:80
    volumes:
      - ./static:/static
      - ./media:/media
    depends_on:
      - web
#  celery_worker:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    container_name: "cleaning_celery_worker"
#    command: celery -A project.celery worker --pool=solo -l info
#    volumes:
#      - .:/app
#    env_file:
#      - ./.env.dev
#    depends_on:
#      - redis
#      - db
#  celery_beat:
#    build:
#      context: .
#      dockerfile: ./Dockerfile
#    container_name: "cleaning_celery_beat"
#    command: celery -A project beat -l INFO
#    volumes:
#      - .:/app
#    env_file:
#      - ./.env.dev
#    depends_on:
#      - redis
#      - db

volumes:
  capture_postgres_data:
